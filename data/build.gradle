plugins {
    alias libs.plugins.android.library
    alias libs.plugins.kotlin.android

    alias libs.plugins.ksp
    alias libs.plugins.kapt
    alias libs.plugins.hilt
    alias libs.plugins.protobuf
}

android {
    namespace 'com.mrsep.musicrecognizer.data'
    compileSdk targetAndroidSdk

    defaultConfig {
        minSdk minAndroidSdk
        targetSdk targetAndroidSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').canRead()) {
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
        }
        buildConfigField 'String', 'AUDD_TOKEN', properties.getProperty("api.audd.token")
        buildConfigField "boolean", "LOG_DEBUG_MODE", "false"
    }

    ksp {
        arg("room.schemaLocation", "$projectDir/schemas")
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG_MODE", "true"
        }
        release {
            minifyEnabled false
            buildConfigField "boolean", "LOG_DEBUG_MODE", "false"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            resources.excludes += "DebugProbesKt.bin"
        }
    }

}

kapt {
    correctErrorTypes true
}

dependencies {

    implementation libs.kotlinx.coroutinesAndroid
    implementation libs.kotlinx.collectionImmutable

    implementation libs.androidx.datastoreCore
    implementation libs.protobuf.javalite

    implementation libs.hilt.android
    kapt libs.hilt.compiler

    implementation libs.room.ktx
    implementation libs.room.runtime
    implementation libs.room.paging3
    ksp libs.room.compiler

    implementation platform(libs.okhttp.bom)
    implementation libs.okhttp.core
    implementation libs.okhttp.loggingInterceptor
    implementation libs.okhttp.coroutines
    implementation libs.retrofit.core
    implementation libs.retrofit.converter.moshi
    implementation libs.retrofit.converter.scalars

    implementation libs.moshi.core
    implementation libs.moshi.adapters
    ksp libs.moshi.codegen

    implementation libs.androidx.workKtx
    implementation libs.androidx.lifecycle.livedataKtx
    implementation libs.hilt.ext.work
    kapt libs.hilt.ext.compiler

    implementation libs.androidx.paging3.runtimeKtx

    testImplementation libs.junit4
    testImplementation libs.kotlinx.coroutinesTest
    testImplementation libs.turbine
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.androidx.test.espresso.core


    implementation project(Modules.Core.Common)
    implementation project(Modules.Core.Strings)

}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${libs.versions.protobufJavalite.get()}"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}