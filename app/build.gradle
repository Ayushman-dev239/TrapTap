plugins {
    alias libs.plugins.android.application
    alias libs.plugins.kotlin.android

    alias libs.plugins.kapt
    alias libs.plugins.hilt
}

android {
    namespace 'com.mrsep.musicrecognizer'
    compileSdk targetAndroidSdk

    defaultConfig {
        applicationId "com.mrsep.musicrecognizer"
        minSdk minAndroidSdk
        targetSdk targetAndroidSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').canRead()) {
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
        }
        buildConfigField 'String', 'AUDD_TOKEN', properties.getProperty("api.audd.token")
        buildConfigField "boolean", "LOG_DEBUG_MODE", "false"
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG_MODE", "true"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "LOG_DEBUG_MODE", "false"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'

        freeCompilerArgs += [
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination=" +
                        project.buildDir.absolutePath + "/compose_metrics"
        ]
        freeCompilerArgs += [
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:metricsDestination=" +
                        project.buildDir.absolutePath + "/compose_metrics"
        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.androidxComposeCompiler.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            resources.excludes += "DebugProbesKt.bin"
        }
    }
}

kapt {
    correctErrorTypes true
}

hilt {
    enableAggregatingTask = true
}

dependencies {

    implementation platform(libs.androidx.compose.bom)
    androidTestImplementation platform(libs.androidx.compose.bom)

    implementation libs.androidx.compose.material3
    implementation libs.androidx.compose.ui.toolingPreview
    implementation libs.androidx.navigation.compose
    implementation libs.androidx.hilt.navigation.compose

    debugImplementation libs.androidx.compose.ui.tooling
    debugImplementation libs.androidx.compose.ui.testManifest
    androidTestImplementation libs.androidx.compose.ui.testJunit

    implementation libs.androidx.core.ktx
    implementation libs.androidx.core.splashscreen
    implementation libs.androidx.activity.compose
    implementation libs.androidx.lifecycle.runtimeKtx
    implementation libs.androidx.lifecycle.runtime.compose
    implementation libs.androidx.lifecycle.viewmodel.compose

    implementation libs.accompanist.systemuicontroller

    implementation libs.kotlinx.coroutinesAndroid
    implementation libs.kotlinx.collectionImmutable

    implementation libs.hilt.android
    kapt libs.hilt.compiler

    implementation libs.coil.compose
    implementation libs.androidx.paging3.common

    implementation libs.androidx.workKtx
    implementation libs.hilt.ext.work
    kapt libs.hilt.ext.compiler

    testImplementation libs.junit4
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.androidx.test.espresso.core


    implementation project(Modules.Data)
    implementation project(Modules.Core.Ui)
    implementation project(Modules.Core.Strings)
    implementation project(Modules.Core.Common)
    implementation project(Modules.Feature.Library)
    implementation project(Modules.Feature.Track)
    implementation project(Modules.Feature.Recognition)
    implementation project(Modules.Feature.RecognitionQueue)
    implementation project(Modules.Feature.Preferences)
    implementation project(Modules.Feature.Onboarding)
    implementation project(Modules.Feature.DeveloperMode)

}
