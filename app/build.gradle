plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    id 'org.jetbrains.kotlin.kapt'
    id 'com.google.dagger.hilt.android'
//    id 'kotlin-parcelize'
    id 'com.google.protobuf'
}

android {
    namespace 'com.mrsep.musicrecognizer'
    compileSdk 33

    defaultConfig {
        applicationId "com.mrsep.musicrecognizer"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').canRead()) {
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
        }
        buildConfigField 'String', 'AUDD_TOKEN', properties.getProperty("api.audd.token")
        buildConfigField "boolean", "LOG_DEBUG_MODE", "false"
    }

    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG_MODE", "true"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "LOG_DEBUG_MODE", "false"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'

        freeCompilerArgs += [
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination=" +
                        project.buildDir.absolutePath + "/compose_metrics"
        ]
        freeCompilerArgs += [
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:metricsDestination=" +
                        project.buildDir.absolutePath + "/compose_metrics"
        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.4'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            resources.excludes += "DebugProbesKt.bin"
        }
    }
}

kapt {
    correctErrorTypes true
}

//hilt {
//    enableAggregatingTask = true
//}

dependencies {

    implementation platform(Libs.Compose.Bom)
    androidTestImplementation platform(Libs.Compose.Bom)

    implementation Libs.Compose.Material3
    implementation Libs.Compose.ToolingPreview
    debugImplementation Libs.Compose.DebugTooling
    androidTestImplementation Libs.Compose.AndroidTestJUnit
    debugImplementation Libs.Compose.DebugManifest

    implementation Libs.Compose.Navigation
    implementation Libs.Compose.HiltNavigation

    implementation Libs.Android.CoreKtx
    implementation Libs.Android.LifecycleRuntime
    implementation Libs.Android.LifecycleLiveData //for info of work manager
    implementation Libs.Android.ActivityCompose
    implementation Libs.Android.LifecycleRuntimeCompose
    implementation Libs.Android.LifecycleViewModelCompose

    testImplementation Libs.Test.JUnit
    androidTestImplementation Libs.AndroidTest.JUnitExt
    androidTestImplementation Libs.AndroidTest.EspressoCore


    implementation Libs.Accompanist.SystemUiController
    implementation Libs.Accompanist.Permissions

    implementation Libs.JetBrains.CoroutinesAndroid
    implementation Libs.JetBrains.CollectionImmutable

    implementation Libs.DataStore.Core
    implementation Libs.DataStore.ProtobufJavalite

    implementation Libs.Room.CoreKtx
    implementation Libs.Room.Runtime
    annotationProcessor Libs.Room.Compiler
    kapt Libs.Room.Kapt

    implementation platform(Libs.OkHttp.Bom)
    implementation Libs.OkHttp.Core
    implementation Libs.OkHttp.LoggingInterceptor
    implementation Libs.Retrofit.Core
    implementation Libs.Retrofit.ConverterMoshi

    implementation Libs.Moshi.Core
    implementation Libs.Moshi.Adapters
    kapt Libs.Moshi.Kapt

    implementation Libs.Hilt.Core
    kapt Libs.Hilt.Kapt

    implementation Libs.Coil.Core

    implementation Libs.WorkManager.RuntimeKtx
    implementation Libs.WorkManager.HiltWorkManager
    kapt Libs.WorkManager.Kapt

    implementation Libs.Paging3.RuntimeKtx
    implementation Libs.Paging3.Compose
    implementation Libs.Paging3.Room

}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobuf_version"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}
